name: CI

on:
  push:
    branches:
      - prod
  pull_request:

jobs:
  build-docker-images:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          target: hot-reloading
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/unmute-backend:latest
            ghcr.io/${{ github.repository }}/unmute-backend:${{ github.sha }}

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/hot-reloading.Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/unmute-frontend:latest
            ghcr.io/${{ github.repository }}/unmute-frontend:${{ github.sha }}

      - name: Build and push moshi-server image
        uses: docker/build-push-action@v5
        with:
          context: ./services/moshi-server
          file: ./services/moshi-server/public.Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/moshi-server:latest
            ghcr.io/${{ github.repository }}/moshi-server:${{ github.sha }}

  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: '0.7.12'

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: cd frontend && pnpm install

      - name: Run pre-commit
        run: |
          uv run pre-commit run --all-files
          # Some redundancy here because some hooks will run in any stage,
          # but I don't think there is a cleaner way to make sure they all run
          uv run pre-commit run --all-files --hook-stage pre-push

  backend-unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: '0.7.12'

      - name: Run backend unit tests
        run: uv run pytest -v
