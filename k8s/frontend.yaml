apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: speech-io
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: ghcr.io/uncensored-ai-inc/unmute-frontend:latest
          ports:
            - containerPort: 3000
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: speech-io
spec:
  selector:
    app: frontend
  ports:
    - port: 3000
      targetPort: 3000
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: speech-io-ingress
  namespace: speech-io
  labels:
    app: speech-io
    component: frontend
  annotations:
    # Certificate management
    cert-manager.io/issuer: 'prod-issuer'
    cert-manager.io/issuer-kind: 'OriginIssuer'
    cert-manager.io/issuer-group: 'cert-manager.k8s.cloudflare.com'
    # NGINX configuration
    nginx.ingress.kubernetes.io/proxy-body-size: '10m'
    nginx.ingress.kubernetes.io/proxy-connect-timeout: '30'
    nginx.ingress.kubernetes.io/proxy-send-timeout: '30'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '30'
    nginx.ingress.kubernetes.io/proxy-buffer-size: '8k'
    nginx.ingress.kubernetes.io/proxy-buffers-number: '8'
    # Security headers
    nginx.ingress.kubernetes.io/custom-http-errors: '404,503'
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit-connections: '20'
    nginx.ingress.kubernetes.io/rate-limit-rps: '10'
    # WebSocket support for real-time speech
    nginx.ingress.kubernetes.io/proxy-read-timeout: '3600'
    nginx.ingress.kubernetes.io/proxy-send-timeout: '3600'
    nginx.ingress.kubernetes.io/server-snippets: |
      location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
      }
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - speech-io.staging.uncensored.ai
      secretName: speech-io-staging-auto-tls
  rules:
    - host: speech-io.staging.uncensored.ai
      http:
        paths:
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: backend
                port:
                  number: 80
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend
                port:
                  number: 3000
